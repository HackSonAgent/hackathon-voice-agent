/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated/route'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as AuthenticatedHistoryIndexImport } from './routes/_authenticated/history/index'

// Create Virtual Routes

const AuthenticatedSettingsRouteLazyImport = createFileRoute(
  '/_authenticated/settings',
)()
const AuthenticatedTestApiIndexLazyImport = createFileRoute(
  '/_authenticated/test-api/',
)()
const AuthenticatedSettingsIndexLazyImport = createFileRoute(
  '/_authenticated/settings/',
)()
const AuthenticatedAppsIndexLazyImport = createFileRoute(
  '/_authenticated/apps/',
)()
const AuthenticatedAgentIndexLazyImport = createFileRoute(
  '/_authenticated/agent/',
)()

// Create/Update Routes

const AuthenticatedRouteRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedSettingsRouteLazyRoute =
  AuthenticatedSettingsRouteLazyImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/route.lazy').then((d) => d.Route),
  )

const AuthenticatedTestApiIndexLazyRoute =
  AuthenticatedTestApiIndexLazyImport.update({
    id: '/test-api/',
    path: '/test-api/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/test-api/index.lazy').then((d) => d.Route),
  )

const AuthenticatedSettingsIndexLazyRoute =
  AuthenticatedSettingsIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/index.lazy').then((d) => d.Route),
  )

const AuthenticatedAppsIndexLazyRoute = AuthenticatedAppsIndexLazyImport.update(
  {
    id: '/apps/',
    path: '/apps/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any,
).lazy(() =>
  import('./routes/_authenticated/apps/index.lazy').then((d) => d.Route),
)

const AuthenticatedAgentIndexLazyRoute =
  AuthenticatedAgentIndexLazyImport.update({
    id: '/agent/',
    path: '/agent/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/agent/index.lazy').then((d) => d.Route),
  )

const AuthenticatedHistoryIndexRoute = AuthenticatedHistoryIndexImport.update({
  id: '/history/',
  path: '/history/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsRouteLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/history/': {
      id: '/_authenticated/history/'
      path: '/history'
      fullPath: '/history'
      preLoaderRoute: typeof AuthenticatedHistoryIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/agent/': {
      id: '/_authenticated/agent/'
      path: '/agent'
      fullPath: '/agent'
      preLoaderRoute: typeof AuthenticatedAgentIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/apps/': {
      id: '/_authenticated/apps/'
      path: '/apps'
      fullPath: '/apps'
      preLoaderRoute: typeof AuthenticatedAppsIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/settings/': {
      id: '/_authenticated/settings/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof AuthenticatedSettingsIndexLazyImport
      parentRoute: typeof AuthenticatedSettingsRouteLazyImport
    }
    '/_authenticated/test-api/': {
      id: '/_authenticated/test-api/'
      path: '/test-api'
      fullPath: '/test-api'
      preLoaderRoute: typeof AuthenticatedTestApiIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedSettingsRouteLazyRouteChildren {
  AuthenticatedSettingsIndexLazyRoute: typeof AuthenticatedSettingsIndexLazyRoute
}

const AuthenticatedSettingsRouteLazyRouteChildren: AuthenticatedSettingsRouteLazyRouteChildren =
  {
    AuthenticatedSettingsIndexLazyRoute: AuthenticatedSettingsIndexLazyRoute,
  }

const AuthenticatedSettingsRouteLazyRouteWithChildren =
  AuthenticatedSettingsRouteLazyRoute._addFileChildren(
    AuthenticatedSettingsRouteLazyRouteChildren,
  )

interface AuthenticatedRouteRouteChildren {
  AuthenticatedSettingsRouteLazyRoute: typeof AuthenticatedSettingsRouteLazyRouteWithChildren
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedHistoryIndexRoute: typeof AuthenticatedHistoryIndexRoute
  AuthenticatedAgentIndexLazyRoute: typeof AuthenticatedAgentIndexLazyRoute
  AuthenticatedAppsIndexLazyRoute: typeof AuthenticatedAppsIndexLazyRoute
  AuthenticatedTestApiIndexLazyRoute: typeof AuthenticatedTestApiIndexLazyRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedSettingsRouteLazyRoute:
    AuthenticatedSettingsRouteLazyRouteWithChildren,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedHistoryIndexRoute: AuthenticatedHistoryIndexRoute,
  AuthenticatedAgentIndexLazyRoute: AuthenticatedAgentIndexLazyRoute,
  AuthenticatedAppsIndexLazyRoute: AuthenticatedAppsIndexLazyRoute,
  AuthenticatedTestApiIndexLazyRoute: AuthenticatedTestApiIndexLazyRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AuthenticatedRouteRouteWithChildren
  '/settings': typeof AuthenticatedSettingsRouteLazyRouteWithChildren
  '/': typeof AuthenticatedIndexRoute
  '/history': typeof AuthenticatedHistoryIndexRoute
  '/agent': typeof AuthenticatedAgentIndexLazyRoute
  '/apps': typeof AuthenticatedAppsIndexLazyRoute
  '/settings/': typeof AuthenticatedSettingsIndexLazyRoute
  '/test-api': typeof AuthenticatedTestApiIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof AuthenticatedIndexRoute
  '/history': typeof AuthenticatedHistoryIndexRoute
  '/agent': typeof AuthenticatedAgentIndexLazyRoute
  '/apps': typeof AuthenticatedAppsIndexLazyRoute
  '/settings': typeof AuthenticatedSettingsIndexLazyRoute
  '/test-api': typeof AuthenticatedTestApiIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/_authenticated/settings': typeof AuthenticatedSettingsRouteLazyRouteWithChildren
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/history/': typeof AuthenticatedHistoryIndexRoute
  '/_authenticated/agent/': typeof AuthenticatedAgentIndexLazyRoute
  '/_authenticated/apps/': typeof AuthenticatedAppsIndexLazyRoute
  '/_authenticated/settings/': typeof AuthenticatedSettingsIndexLazyRoute
  '/_authenticated/test-api/': typeof AuthenticatedTestApiIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/settings'
    | '/'
    | '/history'
    | '/agent'
    | '/apps'
    | '/settings/'
    | '/test-api'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/history' | '/agent' | '/apps' | '/settings' | '/test-api'
  id:
    | '__root__'
    | '/_authenticated'
    | '/_authenticated/settings'
    | '/_authenticated/'
    | '/_authenticated/history/'
    | '/_authenticated/agent/'
    | '/_authenticated/apps/'
    | '/_authenticated/settings/'
    | '/_authenticated/test-api/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated/route.tsx",
      "children": [
        "/_authenticated/settings",
        "/_authenticated/",
        "/_authenticated/history/",
        "/_authenticated/agent/",
        "/_authenticated/apps/",
        "/_authenticated/test-api/"
      ]
    },
    "/_authenticated/settings": {
      "filePath": "_authenticated/settings/route.lazy.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/settings/"
      ]
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/history/": {
      "filePath": "_authenticated/history/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/agent/": {
      "filePath": "_authenticated/agent/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/apps/": {
      "filePath": "_authenticated/apps/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/settings/": {
      "filePath": "_authenticated/settings/index.lazy.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/test-api/": {
      "filePath": "_authenticated/test-api/index.lazy.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
